name = input("–í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è: ")


class Player:
    def __init__(self, name, hp, damage):
        self.name = name
        self.hp = hp
        self.damage = damage


class Enemy:
    def __init__(self, name, hp, damage):
        self.name = name
        self.hp = hp
        self.damage = damage


races = {
    "—ç–ª—å—Ñ": (1.5, 1),
    "–≥–Ω–æ–º": (0.8, 1.2),
    "—á–µ–ª–æ–≤–µ–∫": (1, 1)
}
profs = {
    "–ª—É—á–Ω–∏–∫": (0.9, 2),
    "—â–∏—Ç–æ–Ω–æ—Å–µ—Ü": (2, 0.6),
    "—Ä—ã—Ü–∞—Ä—å": (1.2, 1.2)
}


def create_hero(name, race, prof):
    hp = 180
    dmg = 25
    hp *= races[race][0]
    hp *= profs[prof][0]
    dmg *= races[race][1]
    dmg *= profs[prof][1]
    hero = Player(name, hp, dmg)
    return hero


# –í—ã–±–æ—Ä —Ä–∞—Å—ã –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
race = ""
prof = ""
# –ü–æ–∫–∞ —Ä–∞—Å–∞ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω—ã –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
while race not in tuple(races.keys()):
    print(f"B—ã–±–µp–∏ —Ä–∞—Å—É: {tuple(races.keys())}")
    race = input("->").lower()

while prof not in tuple(profs.keys()):
    print(f"B—ã–±–µp–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é: {tuple(profs.keys())}")
    prof = input("->").lower()


hero = create_hero(name, race, prof)
print(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –≥–µ—Ä–æ–π —Å –∏–º–µ–Ω–µ–º {hero.name}!\n" 
        f"–¢–≤–æ—ë –∑–¥–æ—Ä–æ–≤—å–µ —Ä–∞–≤–Ω–æ {hero.hp} X–ü. \n"
        f"–¢–≤–æ–π —É—Ä–æ–Ω —Ä–∞–≤–µ–Ω {hero.damage} –µ–¥–∏–Ω–∏—Ü–∞–º.\n" 
        f"–ñ–µ–ª–∞—é —É–¥–∞—á–∏ –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è—Ö, —Å—Ç—Ä–∞–Ω–Ω–∏–∫! üèπüî™")

