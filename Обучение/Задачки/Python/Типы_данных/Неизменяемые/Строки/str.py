"""
Тип данных str в Python представляет собой последовательность символов и
используется для работы с текстовой информацией

1) Строки можно создавать с помощью одинарных ('...'), двойных ("..."), тройных одинарных ('''...''')
   или тройных двойных () кавычек. Тройные кавычки позволяют создавать многострочные строки.

2) Строки в Python являются неизменяемыми (immutable), что означает, что после создания строки её нельзя изменить.
   Любые операции, которые изменяют строку, на самом деле создают новую строку.

3) Каждый символ в строке имеет индекс, начиная с 0.
   Можно получить доступ к отдельным символам с помощью квадратных скобок

4) Строки поддерживают срезы, что позволяет извлекать подстроки (substring = s[1:4]  # 'ell')

5) Строки можно объединять с помощью оператора + и повторять с помощью оператора *

6) Строки имеют множество встроенных методов для выполнения различных операций, таких как:
     - str.lower(), str.upper(), str.title() — изменение регистра.
     - str.strip(), str.lstrip(), str.rstrip() — удаление пробелов.
     - str.split(), str.join() — разделение и объединение строк.
     - str.replace() — замена подстрок.
     - str.find(), str.count() — поиск и подсчет подстрок.
     - str.isalpha(), str.isdigit(), str.isspace() — позволяют проверять, состоит ли строка из букв, цифр или пробелов.
7) - В строках можно использовать escape-символы для специальных символов, таких как:
      - \\ — обратная косая черта,
      - \n — новая строка,
      - \t — табуляция и т.д.
8) Строки в Python 3 хранятся в кодировке Unicode, что позволяет работать с текстами на различных языках.
    Методы, такие как str.encode() и bytes.decode(), позволяют преобразовывать строки в байты и обратно.
"""