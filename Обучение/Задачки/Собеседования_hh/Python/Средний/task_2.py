"""
Вы работаете над системой оценки качества товаров. Вам нужно обработать данные о товарах и их
оценках, и вывести список товаров, чья средняя оценка строго выше заданного порога.
Список выводится по убыванию средней оценки.

[Формат ввода]
Каждая строка содержит название товара и несколько его оценок, разделенных запятыми.
Название и оценки разделены запятой, без пробелов. Всего товаров в списке не больше 100.
У каждого товара от 2 до 100 оценок. В последней строке задаётся пороговая оценка.
[Формат вывода]
Список товаров, чья средняя оценка выше пороговой, отсортированный по убыванию средней оценки.
Одна строка — один товар. Если средняя оценка совпадает у нескольких товаров,
расположите их относительно друг друга в алфавитном порядке. Округлите средние оценки до десятых,
выводите их с одной цифрой после точки (в том числе целые числа, например, «10.0»).
Если товаров, у которых средняя оценка выше пороговой, нет — выводится «Нет данных».

[Пример 1]
- Входные данные:
Телевизор,5,5,5,5,5
Холодильник,4,4,5,5,5
Стиральная машина,5,5,5,5,5
4

- Выходные данные:
Стиральная машина,5.0
Телевизор,5.0
Холодильник,4.6

[Пример 2]
- Входные данные:
Тостер,9,9,9,9
Блендер,9,9,9,9
10

- Выходные данные:
Нет данных
"""

def analyze_quality(input_strings):
    # Последняя строка содержит пороговую оценку
    threshold = float(input_strings[-1])
    product_rating = []

    for line in input_strings[:-1]:
        parts = line.split(',') # разбиваем строку на части, возвращает список где первый
        # элемент - название товара, остальные элементы - оценки
        products_name = parts[0]
        ratings = list(map(float, parts[1:]))
        average_rating = round(sum(ratings) / len(ratings), 1)

        # Добавляем только те товары, которые выше порога
        if average_rating > threshold:
            product_rating.append((products_name, average_rating))

    # Сортируем по средней оценке по убыванию, затем по имени по возрастанию
    product_rating.sort(key=lambda x: (-x[1], x[0]))

    if not product_rating:
        return ['Нет данных']
    else:
        # Формируем список выходных данных
        return [f'{product},{rating:.1f}' for product, rating in product_rating]


# Пример использования
lines = []
while True:
    try:
        line = input()
        if line == "":
            break
    except EOFError:
        break
    lines.append(line)

for product in analyze_quality(lines):
    print(product)


